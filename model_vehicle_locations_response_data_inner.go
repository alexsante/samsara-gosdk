/*
Samsara API

Integrate your data with the Samsara API, customize the Samsara experience, and join a community of developers building with Samsara.

API version: 2019-12-12
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package samsarago

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the VehicleLocationsResponseDataInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VehicleLocationsResponseDataInner{}

// VehicleLocationsResponseDataInner A vehicle and its most recent location.
type VehicleLocationsResponseDataInner struct {
	// The unique Samsara ID of the Vehicle. This is automatically generated when the Vehicle object is created. It cannot be changed.
	Id string `json:"id"`
	Location VehicleLocation `json:"location"`
	// The human-readable name of the Vehicle. This is set by a fleet administrator and will appear in both Samsaraâ€™s cloud dashboard as well as the Samsara Driver mobile app. **By default**, this name is the serial number of the Samsara Vehicle Gateway. It can be set or updated through the Samsara Dashboard or through the API at any time.
	Name string `json:"name"`
}

type _VehicleLocationsResponseDataInner VehicleLocationsResponseDataInner

// NewVehicleLocationsResponseDataInner instantiates a new VehicleLocationsResponseDataInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVehicleLocationsResponseDataInner(id string, location VehicleLocation, name string) *VehicleLocationsResponseDataInner {
	this := VehicleLocationsResponseDataInner{}
	this.Id = id
	this.Location = location
	this.Name = name
	return &this
}

// NewVehicleLocationsResponseDataInnerWithDefaults instantiates a new VehicleLocationsResponseDataInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVehicleLocationsResponseDataInnerWithDefaults() *VehicleLocationsResponseDataInner {
	this := VehicleLocationsResponseDataInner{}
	return &this
}

// GetId returns the Id field value
func (o *VehicleLocationsResponseDataInner) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *VehicleLocationsResponseDataInner) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *VehicleLocationsResponseDataInner) SetId(v string) {
	o.Id = v
}

// GetLocation returns the Location field value
func (o *VehicleLocationsResponseDataInner) GetLocation() VehicleLocation {
	if o == nil {
		var ret VehicleLocation
		return ret
	}

	return o.Location
}

// GetLocationOk returns a tuple with the Location field value
// and a boolean to check if the value has been set.
func (o *VehicleLocationsResponseDataInner) GetLocationOk() (*VehicleLocation, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Location, true
}

// SetLocation sets field value
func (o *VehicleLocationsResponseDataInner) SetLocation(v VehicleLocation) {
	o.Location = v
}

// GetName returns the Name field value
func (o *VehicleLocationsResponseDataInner) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *VehicleLocationsResponseDataInner) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *VehicleLocationsResponseDataInner) SetName(v string) {
	o.Name = v
}

func (o VehicleLocationsResponseDataInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VehicleLocationsResponseDataInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["location"] = o.Location
	toSerialize["name"] = o.Name
	return toSerialize, nil
}

func (o *VehicleLocationsResponseDataInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"location",
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varVehicleLocationsResponseDataInner := _VehicleLocationsResponseDataInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varVehicleLocationsResponseDataInner)

	if err != nil {
		return err
	}

	*o = VehicleLocationsResponseDataInner(varVehicleLocationsResponseDataInner)

	return err
}

type NullableVehicleLocationsResponseDataInner struct {
	value *VehicleLocationsResponseDataInner
	isSet bool
}

func (v NullableVehicleLocationsResponseDataInner) Get() *VehicleLocationsResponseDataInner {
	return v.value
}

func (v *NullableVehicleLocationsResponseDataInner) Set(val *VehicleLocationsResponseDataInner) {
	v.value = val
	v.isSet = true
}

func (v NullableVehicleLocationsResponseDataInner) IsSet() bool {
	return v.isSet
}

func (v *NullableVehicleLocationsResponseDataInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVehicleLocationsResponseDataInner(val *VehicleLocationsResponseDataInner) *NullableVehicleLocationsResponseDataInner {
	return &NullableVehicleLocationsResponseDataInner{value: val, isSet: true}
}

func (v NullableVehicleLocationsResponseDataInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVehicleLocationsResponseDataInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


