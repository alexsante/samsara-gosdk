/*
Samsara API

Integrate your data with the Samsara API, customize the Samsara experience, and join a community of developers building with Samsara.

API version: 2019-12-12
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DriverCarrierSettings type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DriverCarrierSettings{}

// DriverCarrierSettings Carrier for a given driver. If the driver's carrier differs from the general organization's carrier settings, the override value is used. Updating this value only updates the override setting for this driver.
type DriverCarrierSettings struct {
	// Carrier for a given driver.
	CarrierName *string `json:"carrierName,omitempty"`
	// Carrier US DOT Number. If this differs from the general organization's settings, the override value is used. Updating this value only updates the override setting for this driver.
	DotNumber *int64 `json:"dotNumber,omitempty"`
	// Main office address for a given driver. If this differs from the general organization's settings, the override value is used. 
	MainOfficeAddress *string `json:"mainOfficeAddress,omitempty"`
}

// NewDriverCarrierSettings instantiates a new DriverCarrierSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDriverCarrierSettings() *DriverCarrierSettings {
	this := DriverCarrierSettings{}
	return &this
}

// NewDriverCarrierSettingsWithDefaults instantiates a new DriverCarrierSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDriverCarrierSettingsWithDefaults() *DriverCarrierSettings {
	this := DriverCarrierSettings{}
	return &this
}

// GetCarrierName returns the CarrierName field value if set, zero value otherwise.
func (o *DriverCarrierSettings) GetCarrierName() string {
	if o == nil || IsNil(o.CarrierName) {
		var ret string
		return ret
	}
	return *o.CarrierName
}

// GetCarrierNameOk returns a tuple with the CarrierName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DriverCarrierSettings) GetCarrierNameOk() (*string, bool) {
	if o == nil || IsNil(o.CarrierName) {
		return nil, false
	}
	return o.CarrierName, true
}

// HasCarrierName returns a boolean if a field has been set.
func (o *DriverCarrierSettings) HasCarrierName() bool {
	if o != nil && !IsNil(o.CarrierName) {
		return true
	}

	return false
}

// SetCarrierName gets a reference to the given string and assigns it to the CarrierName field.
func (o *DriverCarrierSettings) SetCarrierName(v string) {
	o.CarrierName = &v
}

// GetDotNumber returns the DotNumber field value if set, zero value otherwise.
func (o *DriverCarrierSettings) GetDotNumber() int64 {
	if o == nil || IsNil(o.DotNumber) {
		var ret int64
		return ret
	}
	return *o.DotNumber
}

// GetDotNumberOk returns a tuple with the DotNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DriverCarrierSettings) GetDotNumberOk() (*int64, bool) {
	if o == nil || IsNil(o.DotNumber) {
		return nil, false
	}
	return o.DotNumber, true
}

// HasDotNumber returns a boolean if a field has been set.
func (o *DriverCarrierSettings) HasDotNumber() bool {
	if o != nil && !IsNil(o.DotNumber) {
		return true
	}

	return false
}

// SetDotNumber gets a reference to the given int64 and assigns it to the DotNumber field.
func (o *DriverCarrierSettings) SetDotNumber(v int64) {
	o.DotNumber = &v
}

// GetMainOfficeAddress returns the MainOfficeAddress field value if set, zero value otherwise.
func (o *DriverCarrierSettings) GetMainOfficeAddress() string {
	if o == nil || IsNil(o.MainOfficeAddress) {
		var ret string
		return ret
	}
	return *o.MainOfficeAddress
}

// GetMainOfficeAddressOk returns a tuple with the MainOfficeAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DriverCarrierSettings) GetMainOfficeAddressOk() (*string, bool) {
	if o == nil || IsNil(o.MainOfficeAddress) {
		return nil, false
	}
	return o.MainOfficeAddress, true
}

// HasMainOfficeAddress returns a boolean if a field has been set.
func (o *DriverCarrierSettings) HasMainOfficeAddress() bool {
	if o != nil && !IsNil(o.MainOfficeAddress) {
		return true
	}

	return false
}

// SetMainOfficeAddress gets a reference to the given string and assigns it to the MainOfficeAddress field.
func (o *DriverCarrierSettings) SetMainOfficeAddress(v string) {
	o.MainOfficeAddress = &v
}

func (o DriverCarrierSettings) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DriverCarrierSettings) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CarrierName) {
		toSerialize["carrierName"] = o.CarrierName
	}
	if !IsNil(o.DotNumber) {
		toSerialize["dotNumber"] = o.DotNumber
	}
	if !IsNil(o.MainOfficeAddress) {
		toSerialize["mainOfficeAddress"] = o.MainOfficeAddress
	}
	return toSerialize, nil
}

type NullableDriverCarrierSettings struct {
	value *DriverCarrierSettings
	isSet bool
}

func (v NullableDriverCarrierSettings) Get() *DriverCarrierSettings {
	return v.value
}

func (v *NullableDriverCarrierSettings) Set(val *DriverCarrierSettings) {
	v.value = val
	v.isSet = true
}

func (v NullableDriverCarrierSettings) IsSet() bool {
	return v.isSet
}

func (v *NullableDriverCarrierSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDriverCarrierSettings(val *DriverCarrierSettings) *NullableDriverCarrierSettings {
	return &NullableDriverCarrierSettings{value: val, isSet: true}
}

func (v NullableDriverCarrierSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDriverCarrierSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


