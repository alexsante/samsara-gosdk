/*
Samsara API

Integrate your data with the Samsara API, customize the Samsara experience, and join a community of developers building with Samsara.

API version: 2019-12-12
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package samsarago

import (
	"encoding/json"
)

// checks if the ListDriversResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListDriversResponse{}

// ListDriversResponse A list of drivers.
type ListDriversResponse struct {
	Data []Driver `json:"data,omitempty"`
	Pagination *PaginationResponse `json:"pagination,omitempty"`
}

// NewListDriversResponse instantiates a new ListDriversResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListDriversResponse() *ListDriversResponse {
	this := ListDriversResponse{}
	return &this
}

// NewListDriversResponseWithDefaults instantiates a new ListDriversResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListDriversResponseWithDefaults() *ListDriversResponse {
	this := ListDriversResponse{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *ListDriversResponse) GetData() []Driver {
	if o == nil || IsNil(o.Data) {
		var ret []Driver
		return ret
	}
	return o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListDriversResponse) GetDataOk() ([]Driver, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *ListDriversResponse) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given []Driver and assigns it to the Data field.
func (o *ListDriversResponse) SetData(v []Driver) {
	o.Data = v
}

// GetPagination returns the Pagination field value if set, zero value otherwise.
func (o *ListDriversResponse) GetPagination() PaginationResponse {
	if o == nil || IsNil(o.Pagination) {
		var ret PaginationResponse
		return ret
	}
	return *o.Pagination
}

// GetPaginationOk returns a tuple with the Pagination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListDriversResponse) GetPaginationOk() (*PaginationResponse, bool) {
	if o == nil || IsNil(o.Pagination) {
		return nil, false
	}
	return o.Pagination, true
}

// HasPagination returns a boolean if a field has been set.
func (o *ListDriversResponse) HasPagination() bool {
	if o != nil && !IsNil(o.Pagination) {
		return true
	}

	return false
}

// SetPagination gets a reference to the given PaginationResponse and assigns it to the Pagination field.
func (o *ListDriversResponse) SetPagination(v PaginationResponse) {
	o.Pagination = &v
}

func (o ListDriversResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListDriversResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	if !IsNil(o.Pagination) {
		toSerialize["pagination"] = o.Pagination
	}
	return toSerialize, nil
}

type NullableListDriversResponse struct {
	value *ListDriversResponse
	isSet bool
}

func (v NullableListDriversResponse) Get() *ListDriversResponse {
	return v.value
}

func (v *NullableListDriversResponse) Set(val *ListDriversResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListDriversResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListDriversResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListDriversResponse(val *ListDriversResponse) *NullableListDriversResponse {
	return &NullableListDriversResponse{value: val, isSet: true}
}

func (v NullableListDriversResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListDriversResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


