/*
Samsara API

Integrate your data with the Samsara API, customize the Samsara experience, and join a community of developers building with Samsara.

API version: 2019-12-12
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package samsarago

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the VehicleLocationsListResponseDataInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VehicleLocationsListResponseDataInner{}

// VehicleLocationsListResponseDataInner A vehicle and its list of location events.
type VehicleLocationsListResponseDataInner struct {
	// The unique Samsara ID of the Vehicle. This is automatically generated when the Vehicle object is created. It cannot be changed.
	Id string `json:"id"`
	// A list of location events for the given vehicle.
	Locations []VehicleLocation `json:"locations"`
	// The human-readable name of the Vehicle. This is set by a fleet administrator and will appear in both Samsaraâ€™s cloud dashboard as well as the Samsara Driver mobile app. **By default**, this name is the serial number of the Samsara Vehicle Gateway. It can be set or updated through the Samsara Dashboard or through the API at any time.
	Name string `json:"name"`
}

type _VehicleLocationsListResponseDataInner VehicleLocationsListResponseDataInner

// NewVehicleLocationsListResponseDataInner instantiates a new VehicleLocationsListResponseDataInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVehicleLocationsListResponseDataInner(id string, locations []VehicleLocation, name string) *VehicleLocationsListResponseDataInner {
	this := VehicleLocationsListResponseDataInner{}
	this.Id = id
	this.Locations = locations
	this.Name = name
	return &this
}

// NewVehicleLocationsListResponseDataInnerWithDefaults instantiates a new VehicleLocationsListResponseDataInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVehicleLocationsListResponseDataInnerWithDefaults() *VehicleLocationsListResponseDataInner {
	this := VehicleLocationsListResponseDataInner{}
	return &this
}

// GetId returns the Id field value
func (o *VehicleLocationsListResponseDataInner) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *VehicleLocationsListResponseDataInner) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *VehicleLocationsListResponseDataInner) SetId(v string) {
	o.Id = v
}

// GetLocations returns the Locations field value
func (o *VehicleLocationsListResponseDataInner) GetLocations() []VehicleLocation {
	if o == nil {
		var ret []VehicleLocation
		return ret
	}

	return o.Locations
}

// GetLocationsOk returns a tuple with the Locations field value
// and a boolean to check if the value has been set.
func (o *VehicleLocationsListResponseDataInner) GetLocationsOk() ([]VehicleLocation, bool) {
	if o == nil {
		return nil, false
	}
	return o.Locations, true
}

// SetLocations sets field value
func (o *VehicleLocationsListResponseDataInner) SetLocations(v []VehicleLocation) {
	o.Locations = v
}

// GetName returns the Name field value
func (o *VehicleLocationsListResponseDataInner) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *VehicleLocationsListResponseDataInner) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *VehicleLocationsListResponseDataInner) SetName(v string) {
	o.Name = v
}

func (o VehicleLocationsListResponseDataInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VehicleLocationsListResponseDataInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["locations"] = o.Locations
	toSerialize["name"] = o.Name
	return toSerialize, nil
}

func (o *VehicleLocationsListResponseDataInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"locations",
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varVehicleLocationsListResponseDataInner := _VehicleLocationsListResponseDataInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varVehicleLocationsListResponseDataInner)

	if err != nil {
		return err
	}

	*o = VehicleLocationsListResponseDataInner(varVehicleLocationsListResponseDataInner)

	return err
}

type NullableVehicleLocationsListResponseDataInner struct {
	value *VehicleLocationsListResponseDataInner
	isSet bool
}

func (v NullableVehicleLocationsListResponseDataInner) Get() *VehicleLocationsListResponseDataInner {
	return v.value
}

func (v *NullableVehicleLocationsListResponseDataInner) Set(val *VehicleLocationsListResponseDataInner) {
	v.value = val
	v.isSet = true
}

func (v NullableVehicleLocationsListResponseDataInner) IsSet() bool {
	return v.isSet
}

func (v *NullableVehicleLocationsListResponseDataInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVehicleLocationsListResponseDataInner(val *VehicleLocationsListResponseDataInner) *NullableVehicleLocationsListResponseDataInner {
	return &NullableVehicleLocationsListResponseDataInner{value: val, isSet: true}
}

func (v NullableVehicleLocationsListResponseDataInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVehicleLocationsListResponseDataInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


